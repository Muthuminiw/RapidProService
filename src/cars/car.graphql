type Car {
    id:ID!
    firstName:String!
    lastName:String!
    email:String!
    carMake:String!
    carModel:String! 
    vin:String!
    manufacturedDate:String!
    ageOfVehicle:Float!

}
type PageInfo{
  hasNextPage: Boolean!
  endCursor: String!
}
type CarConnection { 
  pageInfo: PageInfo!
  
  nodes: [Car!]!

  totalCount: Int!
}



type messageData{
  message:String!
}

type CardataConn { 
  
  nodes: [Car!]!

  totalCount: Int!
}
type Query{
   
    getCarByAge(ageLimit:String!): messageData!
    carById(id:ID!): Car!
    getAllCars( first: Int!, after: String!): CarConnection!
    getCars: [Car!]!
    getAllCarsAsc(first: Int!,offset: Int!,orderBy: String!):CardataConn!
    getAllCarsFilteredAsc( first: Int!,offset: Int!,orderBy: String!,carModel:String!): CardataConn!
}

type Mutation {

  updateCarById(id: ID!, firstName: String!, lastName: String!, email: String!,carModel:String!): Car!
  deleteCar(id: ID!): ID!
}